/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.MedicineManufactureResearch;

import Business.Vaccine.VaccineDirectory;
import Business.DoctorClass.Patient;
import Business.Medicine.MedicinesDirectory;
import Business.Medicine.Medicine;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Variant.Variant;
import Business.Variant.VariantDirect;
import Business.Network.Network;
import Business.Organization.MedicineOrganization;
import Business.UserAccount.UserAccount;
import Business.Vaccine.Vaccine;
import Business.WorkQueue.MedicineWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;

/**
 * ;
 * import javax.swing.JOptionPane; import javax.swing.JPanel; import
 * javax.swing.table.DefaultTableModel; import org.apache.log4j.Lo
 *
 * @author deepa
 */
public class TestLabResultsJpanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private MedicineOrganization medicineOrganization;
    private MedicinesDirectory dl;
    private VariantDirect variantDirectory;
    private VaccineDirectory vaccineDirectory;
    private Enterprise enterprise;
    private Network network;
    private static Logger log = Logger.getLogger(TestLabResultsJpanel.class);
    private static final String CLASS_NAME = TestLabResultsJpanel.class.getName();

    /**
     * Creates new form LabResultsJpanel
     */
    public TestLabResultsJpanel(JPanel userProcessContainer, UserAccount userAccount, Enterprise enterprise, MedicineOrganization medicineOrganization, Network network, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.medicineOrganization = medicineOrganization;
        this.enterprise = enterprise;
        this.network = network;
        this.business = business;
        this.dl = dl;
        populateTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        backBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        assignBtn = new javax.swing.JButton();
        txtDrugName = new javax.swing.JTextField();
        txtChemicalName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        relationTbl = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 0, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PATIENT NAME", "AGE", "GENDER", "MESSAGE", "SENDER", "VARIANT AND SAMPLE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        workRequestJTable.setRowHeight(30);
        jScrollPane1.setViewportView(workRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 159, 790, 185));

        backBtn.setBackground(new java.awt.Color(0, 0, 255));
        backBtn.setForeground(new java.awt.Color(255, 255, 255));
        backBtn.setText("BACK");
        backBtn.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 362, 84, 20));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("LAB AND CLINICAL TRIAL RESULTS");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 117, 790, -1));

        assignBtn.setBackground(new java.awt.Color(0, 0, 255));
        assignBtn.setForeground(new java.awt.Color(255, 255, 255));
        assignBtn.setText("ASSIGN");
        assignBtn.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        assignBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignBtnActionPerformed(evt);
            }
        });
        add(assignBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(353, 426, 119, 24));
        add(txtDrugName, new org.netbeans.lib.awtextra.AbsoluteConstraints(352, 362, 119, -1));
        add(txtChemicalName, new org.netbeans.lib.awtextra.AbsoluteConstraints(353, 388, 119, -1));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("MEDICINE ASSIGNED:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 360, -1, -1));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("VACCINE ASSIGNED:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 390, -1, -1));

        relationTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "MEDICINE", "VARIANT", "VACCINE"
            }
        ));
        jScrollPane2.setViewportView(relationTbl);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 485, -1, 127));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/test-results.png"))); // NOI18N
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(383, 11, 124, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/vaccine-4.png"))); // NOI18N
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 388, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    public void populateTable() {
        try {
            DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

            model.setRowCount(0);

            System.out.println(medicineOrganization.getWQ().getWorkRequestList());

            for (WorkRequest request : medicineOrganization.getWQ().getWorkRequestList()) {
                System.out.println(request);
                System.out.println(medicineOrganization.getWQ().getWorkRequestList());
                System.out.println(((MedicineWorkRequest) request).getPatient());
                System.out.println(((MedicineWorkRequest) request).getPatient() != null);
                if (((MedicineWorkRequest) request).getPatient() != null) {
                    System.out.println(((MedicineWorkRequest) request).getPatient());
                    String vn = ((MedicineWorkRequest) request).getPatient().getVariantHistory().getVariantHistory().getVariantName();
                    System.out.println(vn);
                    if (!vn.equals("ALPHA")
                            && !vn.equals("BETA") && !vn.equals("GAMMA")
                            && !vn.equals("DELTA") && !vn.equals("OMICRON")) {
                        System.out.println(vn);
                        Object[] row = new Object[6];
                        row[0] = ((MedicineWorkRequest) request).getPatient();
                        row[1] = ((MedicineWorkRequest) request).getPatient().getAge();
                        row[2] = ((MedicineWorkRequest) request).getPatient().getSex();
                        row[3] = ((MedicineWorkRequest) request).getPatient().getTest();
                        row[4] = request.getEndUser().getEmployee().getName();
                        row[5] = vn;
                        model.addRow(row);
                    }
                }
            }
        } catch (Exception e) {
            System.out.println("test lab result is yet to get the data");
        }

    }

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        MedicineManufactureWorkArea dwjp = (MedicineManufactureWorkArea) component;
        dwjp.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void assignBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestJTable.getSelectedRow();
        boolean flag = true;
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }

        Patient patient = (Patient) workRequestJTable.getValueAt(selectedRow, 0);
        String VN = patient.getVariantHistory().getVariantHistory().getVariantName();
        String med = txtDrugName.getText();
        String chem = txtChemicalName.getText();
        if(med.isEmpty()||chem.isEmpty()){
            flag = false;
            JOptionPane.showMessageDialog(null, "Please provide value in both text box");
            return;
        }
        
        if(flag = true){
        Medicine m = new Medicine();
        m.setMedName(med);
        Variant g = new Variant();
        g.setVariantName(VN);
        m.setVariant(g);
        System.out.println(m.getVariant().getVariantName());
        Vaccine v = new Vaccine();
        v.setVaccineName(chem);
        m.getVaccineList().setVaccineName(chem);
        business.addtoListofM(m);
        System.out.println(m.getVaccineList().getVaccineName());
        System.out.println(m);

        JOptionPane.showMessageDialog(null, "Added medicine and vaccine for New variant. ");

        populateRelationTable();
        }
    }//GEN-LAST:event_assignBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable relationTbl;
    private javax.swing.JTextField txtChemicalName;
    private javax.swing.JTextField txtDrugName;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables

    private void populateRelationTable() {
        DefaultTableModel model = (DefaultTableModel) relationTbl.getModel();
        model.setRowCount(0);

        for (int i = 0; i < business.getListofM().size(); i++) {

            Object[] row = new Object[3];
            row[0] = business.getListofM().get(i).getMedName();
            row[1] = business.getListofM().get(i).getVariant().getVariantName();
            row[2] = business.getListofM().get(i).getVaccineList().getVaccineName();
            model.addRow(row);
        }

    }

}
