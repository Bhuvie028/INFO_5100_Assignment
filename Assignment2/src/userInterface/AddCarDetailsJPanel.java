/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import model.CarDetails;
import model.ViewCarDetails;

/**
 *
 * @author bhuva
 */
public class AddCarDetailsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddCarDetailsJPanel
     */
    
    ViewCarDetails details;
    public AddCarDetailsJPanel(ViewCarDetails details) {
        initComponents();
        this.details = details;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblManufacturerName = new javax.swing.JLabel();
        lblModelName = new javax.swing.JLabel();
        lblModelNumber = new javax.swing.JLabel();
        lblManufactureYear = new javax.swing.JLabel();
        lblUnitsAvailable = new javax.swing.JLabel();
        lblCarClassType = new javax.swing.JLabel();
        lblNumberOfSeats = new javax.swing.JLabel();
        lblCarCurrentLocation = new javax.swing.JLabel();
        lblCarCurrentLocation1 = new javax.swing.JLabel();
        txtManufacturerName = new javax.swing.JTextField();
        txtModelName = new javax.swing.JTextField();
        txtModelNumber = new javax.swing.JTextField();
        txtManufacturerYear = new javax.swing.JTextField();
        txtUnitsAvailable = new javax.swing.JTextField();
        txtCarClassType = new javax.swing.JTextField();
        txtNumberOfSeats = new javax.swing.JTextField();
        txtCarCurrentLocation = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        yearchooser = new com.toedter.calendar.JYearChooser();
        btnYear = new javax.swing.JButton();
        txtMaintenanceCertificateDate = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        btnGetDate = new javax.swing.JButton();
        btnImport = new javax.swing.JButton();
        photoAddCarDetails = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, java.awt.Color.magenta, java.awt.Color.black));
        setForeground(new java.awt.Color(255, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle.setFont(new java.awt.Font("Courier New", 1, 36)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(0, 51, 51));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Add Car");
        lblTitle.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 44, 1545, -1));

        lblManufacturerName.setText("Manufacturer Name :");
        add(lblManufacturerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 94, -1, -1));

        lblModelName.setText("Model Name :");
        add(lblModelName, new org.netbeans.lib.awtextra.AbsoluteConstraints(567, 120, -1, -1));

        lblModelNumber.setText("Model Number:");
        add(lblModelNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 149, -1, -1));

        lblManufactureYear.setText("Manufacture Year :");
        add(lblManufactureYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(539, 178, -1, -1));

        lblUnitsAvailable.setText("Units Available :");
        add(lblUnitsAvailable, new org.netbeans.lib.awtextra.AbsoluteConstraints(555, 207, -1, -1));

        lblCarClassType.setText("Class Type :");
        add(lblCarClassType, new org.netbeans.lib.awtextra.AbsoluteConstraints(573, 233, -1, -1));

        lblNumberOfSeats.setText("Number Of Seats :");
        add(lblNumberOfSeats, new org.netbeans.lib.awtextra.AbsoluteConstraints(543, 259, -1, -1));

        lblCarCurrentLocation.setText("Car Current Location :");
        add(lblCarCurrentLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(525, 285, -1, -1));

        lblCarCurrentLocation1.setText("Maintenance Certificate Date :");
        add(lblCarCurrentLocation1, new org.netbeans.lib.awtextra.AbsoluteConstraints(485, 308, -1, -1));

        txtManufacturerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtManufacturerNameActionPerformed(evt);
            }
        });
        txtManufacturerName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtManufacturerNameKeyTyped(evt);
            }
        });
        add(txtManufacturerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(642, 91, 303, -1));

        txtModelName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtModelNameActionPerformed(evt);
            }
        });
        add(txtModelName, new org.netbeans.lib.awtextra.AbsoluteConstraints(642, 117, 303, -1));

        txtModelNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtModelNumberActionPerformed(evt);
            }
        });
        add(txtModelNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(642, 146, 303, -1));

        txtManufacturerYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtManufacturerYearActionPerformed(evt);
            }
        });
        txtManufacturerYear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtManufacturerYearKeyTyped(evt);
            }
        });
        add(txtManufacturerYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(642, 175, 127, -1));

        txtUnitsAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUnitsAvailableActionPerformed(evt);
            }
        });
        add(txtUnitsAvailable, new org.netbeans.lib.awtextra.AbsoluteConstraints(642, 204, 303, -1));

        txtCarClassType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCarClassTypeActionPerformed(evt);
            }
        });
        add(txtCarClassType, new org.netbeans.lib.awtextra.AbsoluteConstraints(642, 230, 303, -1));

        txtNumberOfSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumberOfSeatsActionPerformed(evt);
            }
        });
        txtNumberOfSeats.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumberOfSeatsKeyTyped(evt);
            }
        });
        add(txtNumberOfSeats, new org.netbeans.lib.awtextra.AbsoluteConstraints(642, 256, 303, -1));

        txtCarCurrentLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCarCurrentLocationActionPerformed(evt);
            }
        });
        add(txtCarCurrentLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(642, 282, 303, -1));

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(753, 342, 65, -1));
        add(yearchooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(775, 175, 56, -1));

        btnYear.setText("Get Year");
        btnYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYearActionPerformed(evt);
            }
        });
        add(btnYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(837, 175, 108, 20));

        txtMaintenanceCertificateDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaintenanceCertificateDateActionPerformed(evt);
            }
        });
        txtMaintenanceCertificateDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMaintenanceCertificateDateKeyTyped(evt);
            }
        });
        add(txtMaintenanceCertificateDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(642, 308, 142, -1));
        add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 308, -1, -1));

        btnGetDate.setText("Get Date");
        btnGetDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetDateActionPerformed(evt);
            }
        });
        add(btnGetDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 310, -1, -1));

        btnImport.setText("Import");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });
        add(btnImport, new org.netbeans.lib.awtextra.AbsoluteConstraints(652, 342, -1, -1));

        photoAddCarDetails.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/OJD6N2NOV5C5XMUBTFUWS4DLMU.jpg"))); // NOI18N
        add(photoAddCarDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1550, 1050));
    }// </editor-fold>//GEN-END:initComponents

    private void txtManufacturerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtManufacturerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtManufacturerNameActionPerformed

    private void txtModelNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtModelNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtModelNameActionPerformed

    private void txtModelNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtModelNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtModelNumberActionPerformed

    private void txtManufacturerYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtManufacturerYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtManufacturerYearActionPerformed

    private void txtUnitsAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUnitsAvailableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUnitsAvailableActionPerformed

    private void txtCarClassTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCarClassTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCarClassTypeActionPerformed

    private void txtNumberOfSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumberOfSeatsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumberOfSeatsActionPerformed

    private void txtCarCurrentLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCarCurrentLocationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCarCurrentLocationActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        /*This piece of code was addded to check the validity of the data*/
        
    short chkManuName = 0;   //Value 0 means the value passed is appropriate
    short chkModelName = 0; 
    short chkModelNumber = 0; 
    short chkManuYear = 0; 
    short chkUnitsAvail = 0;
    short chkCarClassType = 0; 
    short chkNumberOfSeats = 0; 
    short chkLocation = 0;
    short chkMaintenanceCertificateDate = 0;
    try{
        if (txtManufacturerName.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Error in provided Car Manufacturer Name Details");
            txtManufacturerName.setText("");
            chkManuName = 1;
        }
        if (txtModelName.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Error in provided Car Model Name Details");
            txtModelName.setText("");
            chkModelName = 1;
        }
        if (txtModelNumber.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Error in provided Car Model Number Details");
            txtModelNumber.setText("");
            chkModelNumber = 1;
        }
        if(txtModelName.getText() == txtModelNumber.getText()){
            JOptionPane.showMessageDialog(null, "Model Name and Model Number cannot the same");
            txtModelNumber.setText("");
            txtModelName.setText("");
            chkModelName = 1;
            chkModelNumber = 1;
        }
        if (txtManufacturerYear.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Error in provided Car Manufacturer Year Details");
            txtManufacturerYear.setText("");
            chkManuYear = 1;
        }
        if (txtUnitsAvailable.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Error in provided Units Available Details");
            txtUnitsAvailable.setText("");
            chkUnitsAvail = 1;
        }
        if (txtCarClassType.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Error in provided Car Class Type Details");
            txtCarClassType.setText("");
            chkCarClassType = 1;
        }
        if (txtNumberOfSeats.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Error in provided Number of Seats Details");
            txtNumberOfSeats.setText("");
            chkNumberOfSeats = 1;
        }
        if (txtCarCurrentLocation.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Error in provided Current Car Location Details");
            txtCarCurrentLocation.setText("");
            chkLocation = 1;
        }
        if (txtMaintenanceCertificateDate.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Error in provided Maintenance Certificate Date Details");
            txtMaintenanceCertificateDate.setText("");
            chkMaintenanceCertificateDate = 1;
        }
    }
    catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error in provided Car Details");     
    }
    if ((chkManuName == 0) && (chkModelName == 0) && (chkModelNumber == 0) && (chkManuYear == 0) && (chkUnitsAvail == 0) && (chkCarClassType == 0) && (chkNumberOfSeats == 0) && (chkLocation == 0) && 
            (chkMaintenanceCertificateDate == 0) ) {   //Checking whether the return type is 0 as expeected
            try{
                String manufacturerName = txtManufacturerName.getText();
                String modelName = txtModelName.getText();
                String modelNumber = txtModelNumber.getText();
                String manufacturerYear = txtManufacturerYear.getText();
                int unitsAvailable = Integer.parseInt(txtUnitsAvailable.getText());
                String carClassType = txtCarClassType.getText();
                int numberOfSeats = Integer.parseInt(txtNumberOfSeats.getText());
                String location = txtCarCurrentLocation.getText();
                String maintenanceCertificateDate = txtMaintenanceCertificateDate.getText();
                CarDetails cd = details.addNewCarDetails();
                cd.setManufacturerName(manufacturerName);
                cd.setModelName(modelName);
                cd.setModelNumber(modelNumber);
                cd.setManufacturerYear(manufacturerYear);
                cd.setUnitsAvailable(unitsAvailable);
                cd.setCarClassType(carClassType);
                cd.setNumberOfSeats(numberOfSeats);
                cd.setLocation(location);
                cd.setMaintenanceCertificateDate(maintenanceCertificateDate);

                JOptionPane.showMessageDialog(this, "New Car Details Added");

                txtManufacturerName.setText("");
                txtModelName.setText("");
                txtModelNumber.setText("");
                txtManufacturerYear.setText("");
                txtUnitsAvailable.setText("");
                txtCarClassType.setText("");
                txtNumberOfSeats.setText("");
                txtCarCurrentLocation.setText("");
                txtMaintenanceCertificateDate.setText("");
                }
            catch(Exception e){
                JOptionPane.showMessageDialog(null, "Error in provided Car Details");

    }
    } else {
        JOptionPane.showMessageDialog(null, "Error in provided Car Details");
    }
    
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYearActionPerformed
        // TODO add your handling code here:
        txtManufacturerYear.setText(String.valueOf(yearchooser.getYear()));
        
    }//GEN-LAST:event_btnYearActionPerformed

    private void txtMaintenanceCertificateDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaintenanceCertificateDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaintenanceCertificateDateActionPerformed

    private void btnGetDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetDateActionPerformed
        // TODO add your handling code here:
        DateFormat dateFormat = new SimpleDateFormat("dd-MM-YYYY");
        txtMaintenanceCertificateDate.setText(dateFormat.format(jDateChooser1.getDate()));
    }//GEN-LAST:event_btnGetDateActionPerformed

    private void txtManufacturerNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtManufacturerNameKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtManufacturerNameKeyTyped

    private void txtManufacturerYearKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtManufacturerYearKeyTyped
        // TODO add your handling code here:
        char value = evt.getKeyChar();
        if((Character.isDigit(value))||(Character.isAlphabetic(value))){
            evt.consume();
        }
    }//GEN-LAST:event_txtManufacturerYearKeyTyped

    private void txtMaintenanceCertificateDateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaintenanceCertificateDateKeyTyped
        // TODO add your handling code here:
        char value = evt.getKeyChar();
        if((Character.isDigit(value))||(Character.isAlphabetic(value))){
            evt.consume();
        }
    }//GEN-LAST:event_txtMaintenanceCertificateDateKeyTyped

    private void txtNumberOfSeatsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumberOfSeatsKeyTyped
        // TODO add your handling code here:
        char value = evt.getKeyChar();
        if((!Character.isDigit(value))||(Character.isAlphabetic(value))){
            evt.consume();
        }
    }//GEN-LAST:event_txtNumberOfSeatsKeyTyped

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        // TODO add your handling code here:
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = file.showSaveDialog(null);
        if(result == JFileChooser.APPROVE_OPTION){
            File selectedFile = file.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
   //         String path = "C:\\Users\\bhuva\\OneDrive\\Desktop\\Java Assignment 1 photos\\Car Datacsv.csv";
            String line = "";
            try{
                BufferedReader br = new BufferedReader(new FileReader(path));
                while ((line = br.readLine()) != null) {
                    String [] values = line.split(",");   
                    String manufacturerName = String.valueOf(values[0]);
                    String modelName = String.valueOf(values[1]);
                    String modelNumber = String.valueOf(values[2]);
                    String manufacturerYear = String.valueOf(values[3]);
                    int unitsAvailable = Integer.parseInt(String.valueOf(values[4]));
                    String carClassType = String.valueOf(values[5]);
                    int numberOfSeats = Integer.parseInt(String.valueOf(values[6]));
                    String location = String.valueOf(values[7]);
                    String maintenanceCertificateDate = String.valueOf(values[8]);
                    CarDetails cd = details.addNewCarDetails();
                    cd.setManufacturerName(manufacturerName);
                    cd.setModelName(modelName);
                    cd.setModelNumber(modelNumber);
                    cd.setManufacturerYear(manufacturerYear);
                    cd.setUnitsAvailable(unitsAvailable);
                    cd.setCarClassType(carClassType);
                    cd.setNumberOfSeats(numberOfSeats);
                    cd.setLocation(location);
                    cd.setMaintenanceCertificateDate(maintenanceCertificateDate);
                }
            } catch(FileNotFoundException e){
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
                }
        }
    }//GEN-LAST:event_btnImportActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGetDate;
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnYear;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel lblCarClassType;
    private javax.swing.JLabel lblCarCurrentLocation;
    private javax.swing.JLabel lblCarCurrentLocation1;
    private javax.swing.JLabel lblManufactureYear;
    private javax.swing.JLabel lblManufacturerName;
    private javax.swing.JLabel lblModelName;
    private javax.swing.JLabel lblModelNumber;
    private javax.swing.JLabel lblNumberOfSeats;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUnitsAvailable;
    private javax.swing.JLabel photoAddCarDetails;
    private javax.swing.JTextField txtCarClassType;
    private javax.swing.JTextField txtCarCurrentLocation;
    private javax.swing.JTextField txtMaintenanceCertificateDate;
    private javax.swing.JTextField txtManufacturerName;
    private javax.swing.JTextField txtManufacturerYear;
    private javax.swing.JTextField txtModelName;
    private javax.swing.JTextField txtModelNumber;
    private javax.swing.JTextField txtNumberOfSeats;
    private javax.swing.JTextField txtUnitsAvailable;
    private com.toedter.calendar.JYearChooser yearchooser;
    // End of variables declaration//GEN-END:variables
}
