/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Encounter;
import model.EncounterHistory;
import model.Patient;
import model.PatientDirectory;
import model.Person;
import model.PersonDirectory;


/**
 *
 * @author bhuva
 */
public class PatientJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PatientJPanel
     */
    private PatientDirectory patient;
    private PersonDirectory person;
    ArrayList<Patient> patientList;
    public PatientJPanel(PatientDirectory patient, PersonDirectory person) {
        initComponents();
        this.patient = patient;
        this.person = person;
        this.patientList = patient.getPatient();
        populatePatientTable(); 
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupCommunity = new javax.swing.ButtonGroup();
        btnGroupAge = new javax.swing.ButtonGroup();
        lblPatientInformation = new javax.swing.JLabel();
        scrlPatientInformationTable = new javax.swing.JScrollPane();
        tblPatientInformation = new javax.swing.JTable();
        btnAddVitals = new javax.swing.JButton();
        lblRespiratoryRate = new javax.swing.JLabel();
        lblHeartRate = new javax.swing.JLabel();
        lblHeight = new javax.swing.JLabel();
        lblWeight = new javax.swing.JLabel();
        txtRespiratory = new javax.swing.JTextField();
        txtHeartRate = new javax.swing.JTextField();
        txtHeight = new javax.swing.JTextField();
        txtWeight = new javax.swing.JTextField();
        btnSavePatientInformation = new javax.swing.JButton();
        lblAbnormal = new javax.swing.JLabel();
        radioButtonYes = new javax.swing.JRadioButton();
        btnEditVitals = new javax.swing.JButton();
        scrlEncounterTable = new javax.swing.JScrollPane();
        tblEncounter = new javax.swing.JTable();
        scrlCommunityTable = new javax.swing.JScrollPane();
        tblCommunitySearch = new javax.swing.JTable();
        lblTotalImmigrant = new javax.swing.JLabel();
        lblTotalCount = new javax.swing.JLabel();
        lblTotalAbnormalPeople = new javax.swing.JLabel();
        lblTotalCountOfPatients = new javax.swing.JLabel();
        btnRefreshVitals = new javax.swing.JButton();
        txtPatientNamePatientInformation = new javax.swing.JTextField();
        lblPatientNamePatientInformation = new javax.swing.JLabel();
        btnSearchGroup = new javax.swing.JButton();
        chkBoxIsImmigrant = new javax.swing.JCheckBox();
        chkBoxIsNonImmigrant = new javax.swing.JCheckBox();
        chkBoxMiddleGroup = new javax.swing.JCheckBox();
        chkBoxIsYouthGroup = new javax.swing.JCheckBox();
        chkBoxOldGroup = new javax.swing.JCheckBox();
        lblPatient = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblPatientInformation.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblPatientInformation.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPatientInformation.setText("Patient Information");
        add(lblPatientInformation, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 45, 1590, 81));

        scrlPatientInformationTable.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N

        tblPatientInformation.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblPatientInformation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Patient Name", "Patient ID", "Age", "City", "Community", "Address", "Doctor Name"
            }
        ));
        scrlPatientInformationTable.setViewportView(tblPatientInformation);

        add(scrlPatientInformationTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(84, 159, 949, 94));

        btnAddVitals.setText("Add Vitals");
        btnAddVitals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddVitalsActionPerformed(evt);
            }
        });
        add(btnAddVitals, new org.netbeans.lib.awtextra.AbsoluteConstraints(143, 271, -1, -1));

        lblRespiratoryRate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblRespiratoryRate.setText("Respiratory Rate :");
        add(lblRespiratoryRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1051, 180, -1, -1));

        lblHeartRate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblHeartRate.setText("Heart Rate :");
        add(lblHeartRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1081, 206, -1, -1));

        lblHeight.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblHeight.setText("Height(cms) :");
        add(lblHeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(1073, 232, -1, -1));

        lblWeight.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblWeight.setText("Weight(Kg) :");
        add(lblWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(1076, 258, -1, -1));

        txtRespiratory.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRespiratoryKeyTyped(evt);
            }
        });
        add(txtRespiratory, new org.netbeans.lib.awtextra.AbsoluteConstraints(1158, 178, 107, -1));

        txtHeartRate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHeartRateKeyTyped(evt);
            }
        });
        add(txtHeartRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1158, 204, 107, -1));

        txtHeight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHeightKeyTyped(evt);
            }
        });
        add(txtHeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(1158, 230, 107, -1));

        txtWeight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtWeightKeyTyped(evt);
            }
        });
        add(txtWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(1158, 256, 107, -1));

        btnSavePatientInformation.setText("Save");
        btnSavePatientInformation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSavePatientInformationActionPerformed(evt);
            }
        });
        add(btnSavePatientInformation, new org.netbeans.lib.awtextra.AbsoluteConstraints(1131, 304, -1, -1));

        lblAbnormal.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblAbnormal.setText("Abnormal :");
        add(lblAbnormal, new org.netbeans.lib.awtextra.AbsoluteConstraints(1089, 282, -1, -1));

        radioButtonYes.setText("Yes");
        radioButtonYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonYesActionPerformed(evt);
            }
        });
        add(radioButtonYes, new org.netbeans.lib.awtextra.AbsoluteConstraints(1158, 279, -1, -1));

        btnEditVitals.setText("Edit Vitals");
        btnEditVitals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditVitalsActionPerformed(evt);
            }
        });
        add(btnEditVitals, new org.netbeans.lib.awtextra.AbsoluteConstraints(147, 426, -1, -1));

        tblEncounter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Respiratory Rate", "Heart Rate", "Height(cms)", "Wright(Kg)", "Abnormal", "Timestamp"
            }
        ));
        scrlEncounterTable.setViewportView(tblEncounter);

        add(scrlEncounterTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(84, 322, 949, 98));

        tblCommunitySearch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Patient ID", "Name", "Age", "City", "Community", "Address", "Abnormal"
            }
        ));
        scrlCommunityTable.setViewportView(tblCommunitySearch);

        add(scrlCommunityTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(84, 513, 949, 94));

        lblTotalImmigrant.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblTotalImmigrant.setText("Total ");
        add(lblTotalImmigrant, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 613, -1, -1));

        lblTotalCount.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblTotalCount.setText("....");
        add(lblTotalCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 613, -1, -1));

        lblTotalAbnormalPeople.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblTotalAbnormalPeople.setForeground(new java.awt.Color(255, 51, 51));
        lblTotalAbnormalPeople.setText("Total Patients :");
        add(lblTotalAbnormalPeople, new org.netbeans.lib.awtextra.AbsoluteConstraints(868, 613, -1, -1));

        lblTotalCountOfPatients.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblTotalCountOfPatients.setForeground(new java.awt.Color(255, 51, 51));
        lblTotalCountOfPatients.setText("....");
        add(lblTotalCountOfPatients, new org.netbeans.lib.awtextra.AbsoluteConstraints(958, 613, -1, -1));

        btnRefreshVitals.setText("Refresh");
        btnRefreshVitals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshVitalsActionPerformed(evt);
            }
        });
        add(btnRefreshVitals, new org.netbeans.lib.awtextra.AbsoluteConstraints(236, 426, -1, -1));

        txtPatientNamePatientInformation.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPatientNamePatientInformationKeyTyped(evt);
            }
        });
        add(txtPatientNamePatientInformation, new org.netbeans.lib.awtextra.AbsoluteConstraints(1158, 152, 107, -1));

        lblPatientNamePatientInformation.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblPatientNamePatientInformation.setText("Patient Name :");
        add(lblPatientNamePatientInformation, new org.netbeans.lib.awtextra.AbsoluteConstraints(1066, 154, -1, -1));

        btnSearchGroup.setText("Search");
        btnSearchGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchGroupActionPerformed(evt);
            }
        });
        add(btnSearchGroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(926, 472, -1, -1));

        btnGroupCommunity.add(chkBoxIsImmigrant);
        chkBoxIsImmigrant.setText("Immigrant");
        chkBoxIsImmigrant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBoxIsImmigrantActionPerformed(evt);
            }
        });
        add(chkBoxIsImmigrant, new org.netbeans.lib.awtextra.AbsoluteConstraints(813, 472, -1, -1));

        btnGroupCommunity.add(chkBoxIsNonImmigrant);
        chkBoxIsNonImmigrant.setText("Non-Immigrant");
        chkBoxIsNonImmigrant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBoxIsNonImmigrantActionPerformed(evt);
            }
        });
        add(chkBoxIsNonImmigrant, new org.netbeans.lib.awtextra.AbsoluteConstraints(714, 472, -1, -1));

        btnGroupAge.add(chkBoxMiddleGroup);
        chkBoxMiddleGroup.setText("Middle Age Group");
        chkBoxMiddleGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBoxMiddleGroupActionPerformed(evt);
            }
        });
        add(chkBoxMiddleGroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 472, -1, -1));

        btnGroupAge.add(chkBoxIsYouthGroup);
        chkBoxIsYouthGroup.setText("Youth Age Group");
        chkBoxIsYouthGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBoxIsYouthGroupActionPerformed(evt);
            }
        });
        add(chkBoxIsYouthGroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(147, 472, -1, -1));

        btnGroupAge.add(chkBoxOldGroup);
        chkBoxOldGroup.setText("Old Age Group");
        chkBoxOldGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBoxOldGroupActionPerformed(evt);
            }
        });
        add(chkBoxOldGroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(367, 472, -1, -1));

        lblPatient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Patient Image.jpg"))); // NOI18N
        add(lblPatient, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1590, 910));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddVitalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddVitalsActionPerformed
        // TODO add your handling code here:
                DefaultTableModel model = (DefaultTableModel) tblPatientInformation.getModel();
                int selectedRowIndex = tblPatientInformation.getSelectedRow();
                Patient selectedPatientDetails = (Patient)model.getValueAt(selectedRowIndex, 0);
        txtPatientNamePatientInformation.setText(String.valueOf(selectedPatientDetails));
    }//GEN-LAST:event_btnAddVitalsActionPerformed

    private void btnSavePatientInformationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSavePatientInformationActionPerformed
        // TODO add your handling code here:
        boolean chkHeartRate = false;
        boolean chkRespiratoryRate =false;
        boolean chkHeight = false;
        boolean chkWeight = false;
            chkHeartRate = txtHeartRate.getText().isEmpty() ? true : false;
            chkRespiratoryRate = txtRespiratory.getText().isEmpty() ? true : false;
            chkHeight = txtHeight.getText().isEmpty()? true : false;
            chkWeight = txtWeight.getText().isEmpty()? true : false;
        if((chkHeartRate == false)&&(chkRespiratoryRate == false)&&(chkHeight == false)&&(chkWeight == false)){
        DefaultTableModel model = (DefaultTableModel) tblPatientInformation.getModel();
        
        int selectedRowIndex = tblPatientInformation.getSelectedRow();
        if (selectedRowIndex <0){
            JOptionPane.showMessageDialog(this, "Please Select a row to add as a Patient");
            return;
        }
        try{
        Patient selectedPatientDetails = (Patient)model.getValueAt(selectedRowIndex, 0);
      //  txtPatientIDPatientInformation.setText(String.valueOf(selectedPatientDetails));
        Encounter e = selectedPatientDetails.addNewEncounterDetails();
        e.setHeartRate(Integer.parseInt(txtHeartRate.getText()));
        e.setRespiratoryRate(Integer.parseInt(txtRespiratory.getText()));
        e.setHeight(Integer.parseInt(txtHeight.getText()));
        e.setWeight(Integer.parseInt(txtWeight.getText()));
        e.setAbnormal(radioButtonYes.isSelected());
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");  
        LocalDateTime now = LocalDateTime.now();
        e.setUpdateTime(dtf.format(now));
        int selectedPatientID = (int) model.getValueAt(selectedRowIndex, 1);
        populateEncounterTable(selectedPatientID);
        }catch(Exception e){
                JOptionPane.showMessageDialog(this, "Please provide correct values");
            }
        }
    }//GEN-LAST:event_btnSavePatientInformationActionPerformed

    private void radioButtonYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonYesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioButtonYesActionPerformed

    private void btnRefreshVitalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshVitalsActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPatientInformation.getSelectedRow();
    //    if (selectedRowIndex <0){
            DefaultTableModel model = (DefaultTableModel) tblPatientInformation.getModel();
            int selectedPatientID = (int) model.getValueAt(selectedRowIndex, 1);
        populateEncounterTable(selectedPatientID);
    //    }else{
        //        JOptionPane.showMessageDialog(this, "Please select a row");
            
    }//GEN-LAST:event_btnRefreshVitalsActionPerformed

    private void btnEditVitalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditVitalsActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblEncounter.getModel();
        for (Patient pat : patientList){
         // if(patientID==pat.getPatientID()){
           ArrayList<Encounter> pa;
           pa = pat.getEncounterHistory();
           for (Encounter et : pa){
               txtPatientNamePatientInformation.setText(String.valueOf(pat.getName()));
               txtRespiratory.setText(String.valueOf(et.getRespiratoryRate()));
               txtHeartRate.setText(String.valueOf(et.getHeartRate()));
               txtHeight.setText(String.valueOf(et.getHeight()));
               radioButtonYes.isSelected();   
           }
        }
    }//GEN-LAST:event_btnEditVitalsActionPerformed

    private void chkBoxIsImmigrantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBoxIsImmigrantActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_chkBoxIsImmigrantActionPerformed

    private void chkBoxIsNonImmigrantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBoxIsNonImmigrantActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkBoxIsNonImmigrantActionPerformed

    private void chkBoxMiddleGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBoxMiddleGroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkBoxMiddleGroupActionPerformed

    private void chkBoxIsYouthGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBoxIsYouthGroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkBoxIsYouthGroupActionPerformed

    private void chkBoxOldGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBoxOldGroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkBoxOldGroupActionPerformed

    private void btnSearchGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchGroupActionPerformed
        // TODO add your handling code here:
        int minYouthAge = 0;
        int maxYouthAge = 24;
        int minMiddleAge = 25;
        int maxMiddleAge = 49;
        int minOldAge = 50;
        int maxOldAge = 100000;
        String isImmigrant = "Immigrant";
        String isNonImmigrant = "NonImmigrant";
        if(chkBoxIsYouthGroup.isSelected() && chkBoxIsImmigrant.isSelected()){
            populateSearchTable(minYouthAge, maxYouthAge, isImmigrant);
        } else if (chkBoxMiddleGroup.isSelected() && chkBoxIsImmigrant.isSelected()){
            populateSearchTable(minMiddleAge, maxMiddleAge, isImmigrant);
        } else if (chkBoxOldGroup.isSelected() && chkBoxIsImmigrant.isSelected()){
            populateSearchTable(minOldAge, maxOldAge, isImmigrant);
        } else if (chkBoxIsYouthGroup.isSelected() && chkBoxIsNonImmigrant.isSelected()){
            populateSearchTable(minYouthAge, maxYouthAge, isNonImmigrant);
        } else if (chkBoxMiddleGroup.isSelected() && chkBoxIsNonImmigrant.isSelected()){
            populateSearchTable(minMiddleAge, maxMiddleAge, isNonImmigrant);
        } else if (chkBoxOldGroup.isSelected() && chkBoxIsNonImmigrant.isSelected()){
            populateSearchTable(minOldAge, maxOldAge, isNonImmigrant);
        } else if (chkBoxIsImmigrant.isSelected()){
            populateSearchTable(isImmigrant);
        } else if (chkBoxIsNonImmigrant.isSelected()){
            populateSearchTable(isNonImmigrant);
        } else if (chkBoxIsYouthGroup.isSelected()){
            populateSearchTable(minYouthAge, maxYouthAge);
        } else if (chkBoxMiddleGroup.isSelected()){
            populateSearchTable(minMiddleAge, maxMiddleAge);
        } else if (chkBoxOldGroup.isSelected()){
            populateSearchTable(minOldAge, maxOldAge);
        } else {
            JOptionPane.showMessageDialog(this, "Please select a checkbox to populate table");
        }
        
    }//GEN-LAST:event_btnSearchGroupActionPerformed

    private void txtPatientNamePatientInformationKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPatientNamePatientInformationKeyTyped
        // TODO add your handling code here:
        char value = evt.getKeyChar();
        if((Character.isDigit(value))){
            evt.consume();
        }
    }//GEN-LAST:event_txtPatientNamePatientInformationKeyTyped

    private void txtRespiratoryKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRespiratoryKeyTyped
        // TODO add your handling code here:
        char value = evt.getKeyChar();
        if((!Character.isDigit(value))){
            evt.consume();
        }
    }//GEN-LAST:event_txtRespiratoryKeyTyped

    private void txtHeartRateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHeartRateKeyTyped
        // TODO add your handling code here:
        char value = evt.getKeyChar();
        if((!Character.isDigit(value))){
            evt.consume();
        }
    }//GEN-LAST:event_txtHeartRateKeyTyped

    private void txtHeightKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHeightKeyTyped
        // TODO add your handling code here:
        char value = evt.getKeyChar();
        if((!Character.isDigit(value))){
            evt.consume();
        }
    }//GEN-LAST:event_txtHeightKeyTyped

    private void txtWeightKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWeightKeyTyped
        // TODO add your handling code here:
        char value = evt.getKeyChar();
        if((!Character.isDigit(value))){
            evt.consume();
        }
    }//GEN-LAST:event_txtWeightKeyTyped
    private void populateSearchTable(int minValue, int maxValue) {
         
       DefaultTableModel model = (DefaultTableModel) tblCommunitySearch.getModel();
       model.setRowCount(0);
       
       for (Patient pat : patientList){
           ArrayList<Encounter> pa;
           pa = pat.getEncounterHistory();
           int i = pa.size()-1; 
           System.out.println(i);
           if((pat.getAge()>=minValue) && (pat.getAge()<= maxValue) && ((pa.get(i).isAbnormal()))){
           Object[] row = new Object[7];
           row[0] = pat.getPatientID();
           row[1] = pat.getName();
           row[2] = pat.getAge();
           row[3] = pat.getCity();
           row[4] = pat.getCommunity();
           row[5] = pat.getAddress();
           row[6] = pa.get(i).isAbnormal();
           model.addRow(row);
          }
       }
       lblTotalCount.setText("Abnormal Patients : " +String.valueOf(tblCommunitySearch.getRowCount()));
       lblTotalCountOfPatients.setText(String.valueOf(tblPatientInformation.getRowCount()));
    }
    private void populateSearchTable(String value) {
         
       DefaultTableModel model = (DefaultTableModel) tblCommunitySearch.getModel();
       model.setRowCount(0);
       
       for (Patient pat : patientList){
           ArrayList<Encounter> pa;
           pa = pat.getEncounterHistory();
           int i = pa.size()-1; 
           System.out.println(i);
           if((pat.getCommunity().equals(value)) && (pa.get(i).isAbnormal())){
           Object[] row = new Object[7];
           row[0] = pat.getPatientID();
           row[1] = pat.getName();
           row[2] = pat.getAge();
           row[3] = pat.getCity();
           row[4] = pat.getCommunity();
           row[5] = pat.getAddress();
           row[6] = pa.get(i).isAbnormal();
           model.addRow(row);
          }           
       }
       lblTotalCount.setText(value+" : " + String.valueOf(tblCommunitySearch.getRowCount()));
       lblTotalCountOfPatients.setText(String.valueOf(tblPatientInformation.getRowCount()));
    }
    private void populateSearchTable(int minValue, int maxValue, String value) {
         
       DefaultTableModel model = (DefaultTableModel) tblCommunitySearch.getModel();
       model.setRowCount(0);
       
       for (Patient pat : patientList){
           ArrayList<Encounter> pa;
           pa = pat.getEncounterHistory();
           int i = pa.size()-1;
           System.out.println(i);
           if((pat.getAge()>=minValue) && (pat.getAge()<= maxValue) && (pat.getCommunity().equals(value)) && (pa.get(i).isAbnormal())){
           
           Object[] row = new Object[7];
           row[0] = pat.getPatientID();
           row[1] = pat.getName();
           row[2] = pat.getAge();
           row[3] = pat.getCity();
           row[4] = pat.getCommunity();
           row[5] = pat.getAddress();
           row[6] = pa.get(i).isAbnormal();
           model.addRow(row);
          }
       }
       lblTotalCount.setText(value+" : " + String.valueOf(tblCommunitySearch.getRowCount()));
       lblTotalCountOfPatients.setText(String.valueOf(tblPatientInformation.getRowCount()));
    }
    private void populatePatientTable() {
       DefaultTableModel model = (DefaultTableModel) tblPatientInformation.getModel();
       model.setRowCount(0);
       
       for (Patient pa : patientList){
           Object[] row = new Object[7];
           row[0] = pa;
           row[1] = pa.getPatientID();
           row[2] = pa.getAge();
           row[3] = pa.getCity();
           row[4] = pa.getCommunity();
           row[5] = pa.getAddress();
           row[6] = pa.getDoctorName();
           model.addRow(row);
           
       }
    }

     private void populateEncounterTable(int patientID) {
         
       DefaultTableModel model = (DefaultTableModel) tblEncounter.getModel();
       model.setRowCount(0);
       
       for (Patient pat : patientList){
          if(patientID==pat.getPatientID()){
           ArrayList<Encounter> pa;
           pa = pat.getEncounterHistory();
           for (Encounter et : pa){
           Object[] row = new Object[6];
           row[0] = et.getRespiratoryRate();
           row[1] = et.getHeartRate();
           row[2] = et.getHeight();
           row[3] = et.getWeight();
           row[4] = et.isAbnormal();
           row[5] = et.getUpdateTime();
           model.addRow(row);
           }
          }
       }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddVitals;
    private javax.swing.JButton btnEditVitals;
    private javax.swing.ButtonGroup btnGroupAge;
    private javax.swing.ButtonGroup btnGroupCommunity;
    private javax.swing.JButton btnRefreshVitals;
    private javax.swing.JButton btnSavePatientInformation;
    private javax.swing.JButton btnSearchGroup;
    private javax.swing.JCheckBox chkBoxIsImmigrant;
    private javax.swing.JCheckBox chkBoxIsNonImmigrant;
    private javax.swing.JCheckBox chkBoxIsYouthGroup;
    private javax.swing.JCheckBox chkBoxMiddleGroup;
    private javax.swing.JCheckBox chkBoxOldGroup;
    private javax.swing.JLabel lblAbnormal;
    private javax.swing.JLabel lblHeartRate;
    private javax.swing.JLabel lblHeight;
    private javax.swing.JLabel lblPatient;
    private javax.swing.JLabel lblPatientInformation;
    private javax.swing.JLabel lblPatientNamePatientInformation;
    private javax.swing.JLabel lblRespiratoryRate;
    private javax.swing.JLabel lblTotalAbnormalPeople;
    private javax.swing.JLabel lblTotalCount;
    private javax.swing.JLabel lblTotalCountOfPatients;
    private javax.swing.JLabel lblTotalImmigrant;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JRadioButton radioButtonYes;
    private javax.swing.JScrollPane scrlCommunityTable;
    private javax.swing.JScrollPane scrlEncounterTable;
    private javax.swing.JScrollPane scrlPatientInformationTable;
    private javax.swing.JTable tblCommunitySearch;
    private javax.swing.JTable tblEncounter;
    private javax.swing.JTable tblPatientInformation;
    private javax.swing.JTextField txtHeartRate;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtPatientNamePatientInformation;
    private javax.swing.JTextField txtRespiratory;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables
}
